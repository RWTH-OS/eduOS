# Copyright (c) 2002 Red Hat, Inc
#
# The authors hereby grant permission to use, copy, modify, distribute,
# and license this software and its documentation for any purpose, provided
# that existing copyright notices are retained in all copies and that this
# notice is included verbatim in any distributions. No written agreement,
# license, or royalty fee is required for any of the authorized uses.
# Modifications to this software may be copyrighted by their authors
# and need not follow the licensing terms described here, provided that
# the new terms are clearly indicated on the first page of each file where
# they apply.

# Makefile for libgloss/eduos.

DESTDIR =
VPATH = @srcdir@ @srcdir@/..
srcdir = @srcdir@
objdir = .
srcroot = $(srcdir)/../..
objroot = $(objdir)/../..

prefix = @prefix@
exec_prefix = @exec_prefix@

host_alias = @host_alias@
target_alias = @target_alias@

bindir = @bindir@
libdir = @libdir@
tooldir = $(exec_prefix)/$(target_alias)

# Multilib support variables.
# TOP is used instead of MULTI{BUILD,SRC}TOP.
MULTIDIRS =
MULTISUBDIR =
MULTIDO = true
MULTICLEAN = true

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@

SHELL = /bin/sh

CC = @CC@

AS = @AS@
NASM = @NASM@
#NASMFLAGS = -felf32
AR = @AR@
LD = @LD@
RANLIB = @RANLIB@
AR_FLAGS = rc

ifneq (,$(findstring -m32,$(CFLAGS)))
BIT = 32
else
BIT = 64
endif

OBJDUMP = `if [ -f ${objroot}/../binutils/objdump ] ; \
	then echo ${objroot}/../binutils/objdump ; \
	else t='$(program_transform_name)'; echo objdump | sed -e $$t ; fi`
OBJCOPY = `if [ -f ${objroot}/../binutils/objcopy ] ; \
	then echo ${objroot}/../binutils/objcopy ; \
	else t='$(program_transform_name)'; echo objcopy | sed -e $$t ; fi`

CRT0 = crt0_$(BIT).o
EDUOS_BSP = libgloss.a
EDUOS_OBJS = chown.o errno.o fork.o gettod.o kill.o open.o sbrk.o times.o write.o \
           close.o execve.o fstat.o init.o link.o read.o stat.o unlink.o \
           environ.o  _exit.o getpid.o isatty.o lseek.o readlink.o symlink.o wait.o \
	   dup.o dup2.o

#### Host specific Makefile fragment comes in here.
@host_makefile_frag@

INCLUDES += -I$(srcdir)/include

%.o : %.asm
	$(NASM) $(NASMFLAGS) -o $@ $<

all: $(CRT0) $(EDUOS_BSP)

$(EDUOS_BSP): $(EDUOS_OBJS)
	$(AR) $(ARFLAGS) $@ $?
	$(RANLIB) $@

chown.o: $(srcdir)/chown.c
errno.o: $(srcdir)/errno.c
fork.o: $(srcdir)/fork.c
gettod.o: $(srcdir)/gettod.c
kill.o: $(srcdir)/kill.c
open.o: $(srcdir)/open.c
sbrk.o: $(srcdir)/sbrk.c
times.o: $(srcdir)/times.c
write.o: $(srcdir)/write.c
close.o: $(srcdir)/close.c
execve.o: $(srcdir)/execve.c
fstat.o: $(srcdir)/fstat.c
init.o: $(srcdir)/init.c
link.o: $(srcdir)/link.c
read.o: $(srcdir)/read.c
stat.o: $(srcdir)/stat.c
unlink.o: $(srcdir)/unlink.c
environ.o: $(srcdir)/environ.c
_exit.o: $(srcdir)/_exit.c
getpid.o: $(srcdir)/getpid.c
isatty.o: $(srcdir)/isatty.c
lseek.o: $(srcdir)/lseek.c
readlink.o: $(srcdir)/readlink.c
symlink.o: $(srcdir)/symlink.c
wait.o: $(srcdir)/wait.c
dup.o: $(srcdir)/dup.c
dup2.o: $(srcdir)/dup2.c

install: $($(CPU)_INSTALL)
	mkdir -p  $(DESTDIR)$(tooldir)/lib${MULTISUBDIR}
	$(INSTALL_DATA) $(CRT0) $(DESTDIR)$(tooldir)/lib${MULTISUBDIR}/crt0.o
	$(INSTALL_DATA) $(EDUOS_BSP) $(DESTDIR)$(tooldir)/lib${MULTISUBDIR}/$(EDUOS_BSP)
	$(INSTALL_DATA) ${srcdir}/link$(BIT).ld $(DESTDIR)$(tooldir)/lib${MULTISUBDIR}/link.ld
	mkdir -p ${DESTDIR}${tooldir}/include/sys
	for i in ${srcdir}/include/sys/*.h; do \
	 ${INSTALL_DATA} $$i ${DESTDIR}${tooldir}/include/sys/`basename $$i`; \
	done;

clean mostlyclean:
	rm -f *.o *.a

distclean maintainer-clean realclean: clean
	rm -f Makefile config.cache config.log config.status

.PHONY: info dvi doc install-info clean-info
info doc dvi:
install-info:
clean-info:

Makefile: Makefile.in config.status @host_makefile_frag_path@
	$(SHELL) config.status

config.status: configure
	$(SHELL) config.status --recheck
